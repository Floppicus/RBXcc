/// <reference types="node" />
import * as events from 'events';
interface Options {
    tcp?: boolean;
    challenge?: boolean;
    id?: number;
}
export declare class Rcon extends events.EventEmitter {
    private host;
    private port;
    private password;
    private rconId;
    private hasAuthed;
    private outstandingData;
    private tcp;
    private challenge;
    private _challengeToken;
    private _tcpSocket;
    private _udpSocket;
    constructor(host: string, port: number, password: string, options?: Options);
    send: (data: string, cmd?: number | undefined, id?: number | undefined) => void;
    private _sendSocket;
    connect: () => void;
    disconnect: () => void;
    setTimeout: (timeout: number, callback: () => void) => void;
    private _udpSocketOnData;
    private _tcpSocketOnData;
    socketOnConnect: () => void;
    socketOnEnd: () => void;
}
export {};
